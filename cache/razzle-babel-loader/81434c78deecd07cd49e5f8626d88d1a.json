{"ast":null,"code":"var _jsxFileName = \"/home/vsorokin/github/react/vsorokin-cv/src/components/Expandable/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nfunction CollapsedContent(_ref) {\n  var handleCollapse = _ref.handleCollapse,\n      altForExpandButton = _ref.altForExpandButton;\n  return __jsx(\"button\", {\n    onClick: handleCollapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 10\n    }\n  }, \"\\uD83D\\uDC47 \", altForExpandButton);\n}\n\nfunction ExpandedContent(_ref2) {\n  var handleCollapse = _ref2.handleCollapse,\n      altForCollapseButton = _ref2.altForCollapseButton,\n      children = _ref2.children;\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: handleCollapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"\\u261D \", altForCollapseButton), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nexport function Expandable(_ref3) {\n  var _ref3$isInitiallyColl = _ref3.isInitiallyCollapsed,\n      isInitiallyCollapsed = _ref3$isInitiallyColl === void 0 ? true : _ref3$isInitiallyColl,\n      _ref3$altForExpandBut = _ref3.altForExpandButton,\n      altForExpandButton = _ref3$altForExpandBut === void 0 ? \"More\" : _ref3$altForExpandBut,\n      _ref3$altForCollapseB = _ref3.altForCollapseButton,\n      altForCollapseButton = _ref3$altForCollapseB === void 0 ? \"Less\" : _ref3$altForCollapseB,\n      children = _ref3.children;\n\n  var _useState = useState(isInitiallyCollapsed),\n      isCollapsed = _useState[0],\n      setIsCollapsed = _useState[1];\n\n  var handleCollapse = function handleCollapse() {\n    return setIsCollapsed(!isCollapsed);\n  };\n\n  if (isCollapsed) {\n    return __jsx(CollapsedContent, {\n      altForExpandButton: altForExpandButton,\n      handleCollapse: handleCollapse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return __jsx(ExpandedContent, {\n      altForCollapseButton: altForCollapseButton,\n      handleCollapse: handleCollapse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, children);\n  }\n}","map":{"version":3,"sources":["/home/vsorokin/github/react/vsorokin-cv/src/components/Expandable/index.js"],"names":["useState","CollapsedContent","handleCollapse","altForExpandButton","ExpandedContent","altForCollapseButton","children","Expandable","isInitiallyCollapsed","isCollapsed","setIsCollapsed"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,gBAAT,OAAkE;AAAA,MAAtCC,cAAsC,QAAtCA,cAAsC;AAAA,MAAtBC,kBAAsB,QAAtBA,kBAAsB;AAChE,SAAO;AAAQ,IAAA,OAAO,EAAED,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqCC,kBAArC,CAAP;AACD;;AAED,SAASC,eAAT,QAA6E;AAAA,MAAlDF,cAAkD,SAAlDA,cAAkD;AAAA,MAAlCG,oBAAkC,SAAlCA,oBAAkC;AAAA,MAAZC,QAAY,SAAZA,QAAY;AAC3E,SACE,4BACE;AAAQ,IAAA,OAAO,EAAEJ,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAoCG,oBAApC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,QAAN,CAFF,CADF;AAMD;;AAED,OAAO,SAASC,UAAT,QAKJ;AAAA,oCAJDC,oBAIC;AAAA,MAJDA,oBAIC,sCAJsB,IAItB;AAAA,oCAHDL,kBAGC;AAAA,MAHDA,kBAGC,sCAHoB,MAGpB;AAAA,oCAFDE,oBAEC;AAAA,MAFDA,oBAEC,sCAFsB,MAEtB;AAAA,MADDC,QACC,SADDA,QACC;;AACD,kBAAsCN,QAAQ,CAACQ,oBAAD,CAA9C;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMR,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAMQ,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,GAAvB;;AAEA,MAAIA,WAAJ,EAAiB;AACf,WACE,MAAC,gBAAD;AACE,MAAA,kBAAkB,EAAEN,kBADtB;AAEE,MAAA,cAAc,EAAED,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD,GAPD,MAOO;AACL,WACE,MAAC,eAAD;AACE,MAAA,oBAAoB,EAAEG,oBADxB;AAEE,MAAA,cAAc,EAAEH,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGI,QAJH,CADF;AAQD;AACF","sourcesContent":["import { useState } from \"react\";\n\nfunction CollapsedContent({ handleCollapse, altForExpandButton }) {\n  return <button onClick={handleCollapse}>üëá {altForExpandButton}</button>;\n}\n\nfunction ExpandedContent({ handleCollapse, altForCollapseButton, children }) {\n  return (\n    <>\n      <button onClick={handleCollapse}>‚òù {altForCollapseButton}</button>\n      <div>{children}</div>\n    </>\n  );\n}\n\nexport function Expandable({\n  isInitiallyCollapsed = true,\n  altForExpandButton = \"More\",\n  altForCollapseButton = \"Less\",\n  children,\n}) {\n  const [isCollapsed, setIsCollapsed] = useState(isInitiallyCollapsed);\n\n  const handleCollapse = () => setIsCollapsed(!isCollapsed);\n\n  if (isCollapsed) {\n    return (\n      <CollapsedContent\n        altForExpandButton={altForExpandButton}\n        handleCollapse={handleCollapse}\n      />\n    );\n  } else {\n    return (\n      <ExpandedContent\n        altForCollapseButton={altForCollapseButton}\n        handleCollapse={handleCollapse}\n      >\n        {children}\n      </ExpandedContent>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}