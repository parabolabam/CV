{"ast":null,"code":"var _jsxFileName = \"/home/vsorokin/github/react/vsorokin-cv/src/components/ProjectCard/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from \"prop-types\";\nimport { Link } from \"../Link\";\nexport function ProjectCard({\n  projectName,\n  projectDescription,\n  startDate,\n  endDate,\n  technologies\n}) {\n  return __jsx(\"div\", {\n    className: \"project-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, projectName), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, projectDescription), __jsx(\"div\", {\n    className: \"project-card__period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, startDate), \" - \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 36\n    }\n  }, endDate)), technologies.map(tech => __jsx(Link, {\n    key: tech.id,\n    href: tech.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, tech.name)));\n}\nProjectCard.propTypes = {\n  projectName: PropTypes.string,\n  projectDescription: PropTypes.string,\n  startDate: PropTypes.string,\n  // date,\n  endDate: PropTypes.string,\n  // date\n  technologies: PropTypes.arrayOf(PropTypes.shape({\n    link: PropTypes.string,\n    name: PropTypes.string,\n    comment: PropTypes.string\n  }))\n};","map":{"version":3,"sources":["/home/vsorokin/github/react/vsorokin-cv/src/components/ProjectCard/index.js"],"names":["PropTypes","Link","ProjectCard","projectName","projectDescription","startDate","endDate","technologies","map","tech","id","link","name","propTypes","string","arrayOf","shape","comment"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,SAArB;AAEA,OAAO,SAASC,WAAT,CAAqB;AAC1BC,EAAAA,WAD0B;AAE1BC,EAAAA,kBAF0B;AAG1BC,EAAAA,SAH0B;AAI1BC,EAAAA,OAJ0B;AAK1BC,EAAAA;AAL0B,CAArB,EAMJ;AACD,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,WAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,kBAAJ,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,SAAP,CADF,SAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,OAAP,CAD7B,CAHF,EAMGC,YAAY,CAACC,GAAb,CAAkBC,IAAD,IAChB,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,IAAA,IAAI,EAAED,IAAI,CAACE,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,IADR,CADD,CANH,CADF;AAcD;AAEDV,WAAW,CAACW,SAAZ,GAAwB;AACtBV,EAAAA,WAAW,EAAEH,SAAS,CAACc,MADD;AAEtBV,EAAAA,kBAAkB,EAAEJ,SAAS,CAACc,MAFR;AAGtBT,EAAAA,SAAS,EAAEL,SAAS,CAACc,MAHC;AAGO;AAC7BR,EAAAA,OAAO,EAAEN,SAAS,CAACc,MAJG;AAIK;AAC3BP,EAAAA,YAAY,EAAEP,SAAS,CAACe,OAAV,CACZf,SAAS,CAACgB,KAAV,CAAgB;AACdL,IAAAA,IAAI,EAAEX,SAAS,CAACc,MADF;AAEdF,IAAAA,IAAI,EAAEZ,SAAS,CAACc,MAFF;AAGdG,IAAAA,OAAO,EAAEjB,SAAS,CAACc;AAHL,GAAhB,CADY;AALQ,CAAxB","sourcesContent":["import PropTypes from \"prop-types\";\nimport { Link } from \"../Link\";\n\nexport function ProjectCard({\n  projectName,\n  projectDescription,\n  startDate,\n  endDate,\n  technologies,\n}) {\n  return (\n    <div className=\"project-card\">\n      <p>{projectName}</p>\n      <p>{projectDescription}</p>\n      <div className=\"project-card__period\">\n        <span>{startDate}</span> - <span>{endDate}</span>\n      </div>\n      {technologies.map((tech) => (\n        <Link key={tech.id} href={tech.link}>\n          {tech.name}\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nProjectCard.propTypes = {\n  projectName: PropTypes.string,\n  projectDescription: PropTypes.string,\n  startDate: PropTypes.string, // date,\n  endDate: PropTypes.string, // date\n  technologies: PropTypes.arrayOf(\n    PropTypes.shape({\n      link: PropTypes.string,\n      name: PropTypes.string,\n      comment: PropTypes.string,\n    })\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}