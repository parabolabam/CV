{"ast":null,"code":"var _jsxFileName = \"/home/vsorokin/github/react/vsorokin-cv/src/components/Expandable/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nfunction CollapsedContent(_ref) {\n  var handleCollapse = _ref.handleCollapse;\n  return __jsx(\"span\", {\n    onClick: handleCollapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 10\n    }\n  }, \"\\uD83D\\uDC47 Expand\");\n}\n\nfunction ExpandedContent(_ref2) {\n  var handleCollapse = _ref2.handleCollapse,\n      children = _ref2.children;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    onClick: handleCollapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"\\u261D Collapse\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nexport function Collapsible(_ref3) {\n  var _ref3$isInitiallyColl = _ref3.isInitiallyCollapsed,\n      isInitiallyCollapsed = _ref3$isInitiallyColl === void 0 ? true : _ref3$isInitiallyColl,\n      children = _ref3.children;\n\n  var _useState = useState(isInitiallyCollapsed),\n      isCollapsed = _useState[0],\n      setIsCollapsed = _useState[1];\n\n  var handleCollapse = function handleCollapse() {\n    return setIsCollapsed(!isCollapsed);\n  };\n\n  if (isCollapsed) {\n    return __jsx(CollapsedContent, {\n      handleCollapse: handleCollapse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return __jsx(ExpandedContent, {\n      handleCollapse: handleCollapse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, children);\n  }\n}","map":{"version":3,"sources":["/home/vsorokin/github/react/vsorokin-cv/src/components/Expandable/index.js"],"names":["useState","CollapsedContent","handleCollapse","ExpandedContent","children","Collapsible","isInitiallyCollapsed","isCollapsed","setIsCollapsed"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,gBAAT,OAA8C;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;AAC5C,SAAO;AAAM,IAAA,OAAO,EAAEA,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACD;;AAED,SAASC,eAAT,QAAuD;AAAA,MAA5BD,cAA4B,SAA5BA,cAA4B;AAAA,MAAZE,QAAY,SAAZA,QAAY;AACrD,SACE,4BACE;AAAK,IAAA,OAAO,EAAEF,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,QAAN,CAFF,CADF;AAMD;;AAED,OAAO,SAASC,WAAT,QAAgE;AAAA,oCAAzCC,oBAAyC;AAAA,MAAzCA,oBAAyC,sCAAlB,IAAkB;AAAA,MAAZF,QAAY,SAAZA,QAAY;;AACrE,kBAAsCJ,QAAQ,CAACM,oBAAD,CAA9C;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMN,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAMM,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,GAAvB;;AAEA,MAAIA,WAAJ,EAAiB;AACf,WAAO,MAAC,gBAAD;AAAkB,MAAA,cAAc,EAAEL,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,WACE,MAAC,eAAD;AAAiB,MAAA,cAAc,EAAEA,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,QADH,CADF;AAKD;AACF","sourcesContent":["import { useState } from \"react\";\n\nfunction CollapsedContent({ handleCollapse }) {\n  return <span onClick={handleCollapse}>üëá Expand</span>;\n}\n\nfunction ExpandedContent({ handleCollapse, children }) {\n  return (\n    <>\n      <div onClick={handleCollapse}>‚òù Collapse</div>\n      <div>{children}</div>\n    </>\n  );\n}\n\nexport function Collapsible({ isInitiallyCollapsed = true, children }) {\n  const [isCollapsed, setIsCollapsed] = useState(isInitiallyCollapsed);\n\n  const handleCollapse = () => setIsCollapsed(!isCollapsed);\n\n  if (isCollapsed) {\n    return <CollapsedContent handleCollapse={handleCollapse} />;\n  } else {\n    return (\n      <ExpandedContent handleCollapse={handleCollapse}>\n        {children}\n      </ExpandedContent>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}